Player(Init){
  * (Init):
  | Key(q) & (Cell (O,V) / Cell (O,T)) ? Move(O) :(Init)
  | Key(d) & (Cell (E,V) / Cell (E,T)) ? Move(E) :(Init)
  | Key(z) & (Cell (N,V) / Cell (N,T)) ? Move(N) :(Init)
  | Key(s) & (Cell (S,V) / Cell (S,T)) ? Move(S) :(Init)
  | Key(p) ? Get()   :(Init)
  | Key(m) ? Get()   :(Init)
  | Key(o) ? Get()   :(Init)
  | Key(l) ? Get()   :(Init)
  }
  
  Leader(Init){
  * (Init): True ? Wait :(Init)
  }
  
 Allie1(Init1){
  * (Init1):
  | Closest(@,N) & (Cell(N,V) / Cell(N,T)) ? Move(N) :(Init1)
  | Closest(@,S) & (Cell(S,V) / Cell(S,T)) ? Move(S) :(Init1)
  | Closest(@,E) & (Cell(E,V) / Cell(E,T)) ? Move(E) :(Init1)
  | Closest(@,O) & (Cell(O,V) / Cell(O,T)) ? Move(O) :(Init1)
  }

 Allie2(Init2){
  * (Init2):
  | Closest(T,N) & (Cell(N,V) / Cell(N,@))  ? Move(N) :(Init2)
  | Closest(T,S) & (Cell(S,V) / Cell(S,@)) ? Move(S) :(Init2)
  | Closest(T,E) & (Cell(E,V) / Cell(E,@)) ? Move(E) :(Init2)
  | Closest(T,O) & (Cell(O,V) / Cell(O,@))  ? Move(O) :(Init2)
  }
  
 Obst(Init){
  * (Init): True ? Wait :(Init)
 }
 
 Floor(Init){
  * (Init): True ? Wait :(Init)
 }
 
 Queen(Init){
  * (Init):
  | Closest(@,N) & ((Cell(N,V) / Cell(N,A)) & !(Cell(N,@) / Cell(N,T))) ? Move(N) :(Ponte)
  | Closest(@,S) & ((Cell(S,V) / Cell(S,A)) & !(Cell(N,@) / Cell(N,T))) ? Move(S) :(Ponte)
  | Closest(@,E) & ((Cell(E,V) / Cell(E,A)) & !(Cell(N,@) / Cell(N,T))) ? Move(E) :(Ponte)
  | Closest(@,O) & ((Cell(O,V) / Cell(O,A)) & !(Cell(N,@) / Cell(N,T))) ? Move(O) :(Ponte)
  | Cell(N,@) / Cell(N,T) ? Hit(N) :(Ponte)
  | Cell(S,@) / Cell(S,T) ? Hit(S) :(Ponte)
  | Cell(E,@) / Cell(E,T) ? Hit(E) :(Ponte)
  | Cell(O,@) / Cell(O,T) ? Hit(O) :(Ponte)
  * (Ponte): True ? Egg() :(Init) 
 }
 
 Monstre(Init){
 * (Init):
 | Cell(N,V) ? Move(N) :(Init)
 | Cell(N,@) / Cell(N,T) ? Hit(N) :(Init)
 | Cell(S,V) ? Move(S) :(Init)
 | Cell(S,@) / Cell(S,T) ? Hit(S) :(Init)
 | Cell(O,V) ? Move(O) :(Init)
 | Cell(O,@) / Cell(O,T) ? Hit(O) :(Init)
 | Cell(E,V) ? Move(E) :(Init)
 | Cell(E,@) / Cell(E,T) ? Hit(E) :(Init)
 
 }
 
  Transe(Init){
 * (Init): True ? Turn(R) :(Init)
 
 }
